---
import { type CollectionEntry, getCollection } from 'astro:content';

import Layout from '~/layouts/Layout.astro'
import Hero from '~/components/Hero.astro'
import WrapperDiagonal from '~/components/WrapperDiagonal.astro'
import CTA from '~/components/CTA.astro'
import WorkExcerpt from '~/components/WorkExcerpt.astro'
import Button from '~/components/ui/Button.astro'

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

// Get the entry directly from the prop on render
const { entry } = Astro.props
const { Content } = await entry.render()

// Filter blog entries with 'draft: false' & date before current date
const publishedProjectEntries = await getCollection("projects", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Sort content entries by publication date
publishedProjectEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});

// More Work Setup
let projectsArray = []
publishedProjectEntries.map(project =>
  // check if slugs match so we don't show the same project
  entry.slug.replaceAll('/', '') !== project.slug.replaceAll('/', '') && (
    projectsArray.push(project)
  )
)

---

<Layout title={entry.data.title} namespace="single-post">

  <Hero class="pb-20" image={entry.data.image.src} alt="A man wearing a butcher's smock standing behind a counter carving a ham" width={1920} height={1080}>
    <div class="lg:max-w-screen-lg" data-speed="0.75">
      <h1>{entry.data.title}</h1>
    </div>
  </Hero>

  <WrapperDiagonal defaultCTA={false}>

    <!-- Content -->
    <div class="transition-in transition-fade [&>section]:mb-12 md:[&_section]:mb-36">
      <Content />
    </div>

    <!-- More Work -->
    <section class="wrapper">
      <div class="w-full flex justify-center">
        <h3 data-anim-elem="fillText" class="h1 mb-0 grid grid-cols-1 grid-rows-1">
          <span data-filltext="outline" class="transition-fade relative z-40 col-start-1 row-start-1 text-outline text-outline--dark">More <br class="lg:hidden" />Work</span>
          <span data-filltext="fill" class="transition-fade relative z-40 col-start-1 row-start-1">More <br class="lg:hidden" />Work</span>
        </h3>
      </div>
      <div class="grid md:grid-cols-2 mt-12 gap-8 md:gap-x-32 md:gap-y-16 md:mt-16 work-columns mb-8 lg:mb-20">

        {projectsArray.slice(0, 2).map(project =>
          <div data-anim-elem="fadeInUp" class="">
            <div class="transition-fade">
              <div class="workTile">
                <WorkExcerpt slug={('/work/'+project.slug).replace('//', '/')} title={project.data.title} img={project.data.image.src} tags={project.data.tags} desc={project.data.excerpt} />
              </div>
            </div>
          </div>
        )}
      </div>

      <div class="flex justify-center w-full">
        <Button tag="a" slash href="/work/">view all work</Button>
      </div>

    </section>

    <div class="wrapper-wide my-12 lg:mt-60 lg:mb-40">
      <hr class="border-darkgray border-t-2" />
    </div>

    <CTA defaultClasses={false} class="wrapper mt-0 lg:mt-0 lg:pb-16" />
  </WrapperDiagonal>
</Layout>