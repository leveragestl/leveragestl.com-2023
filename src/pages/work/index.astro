---
import { getCollection } from "astro:content";

import Layout from '../../layouts/Layout.astro'
import Hero from '../../components/Hero.astro'
import WrapperDiagonal from '../../components/WrapperDiagonal.astro'

// import FilteredProjects from '../../components/FilteredProjects.vue'
import WorkExcerpt from '../../components/WorkExcerpt.astro';
import TagFilters from "../../components/TagFilters.astro";

// Filter blog entries with 'draft: false' & date before current date
const publishedProjectEntries = await getCollection("projects", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
})

// Get tags that are included in viewable projects
const projectCategories = []
// publishedProjectEntries.forEach(project => {
//   projectCategories.concat(project.data.tags).forEach(item =>{
//     if (projectCategories.indexOf(item) == -1) {
//       projectCategories.push(item)
//     }
//   })
// })

import categories from '../../data/categories-projects.json'
categories.map(category => {
  projectCategories.push(category.slug)
})

// Sort content entries by publication date
publishedProjectEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
})

// Utils
function convertToClass(elem: string, prefix?: string) {
  return (
    // prefix (optional) and transform to lowercase
    (prefix ? prefix+'-' : '') + elem.toLowerCase()
    // replace '&', '+' and spaces with dash
    .replace(new RegExp('[ \+_&]', 'g'), '-')
    // replace dashes of 2 or more with single dash
    .replace(new RegExp('-{2,}', 'g'), '-')
  )
}
---

<Layout title='Work' namespace="work">
  <Hero>
    <h2 class="h1 text-outline text-outline--light">Our Work</h2>
  </Hero>

  <WrapperDiagonal>

    <div class="-mt-[calc(var(--diagWrapperHeight)_-_4rem)] wrapper">
      <div class="hidden lg:flex gap-x-2 justify-end mb-12 transition-in transition-fade">
        <button class="group"><i class="small-grid opacity-20 group-hover:opacity-100 transition [.active_&]:opacity-100"></i></button>
        <button class="group active"><i class="large-grid opacity-20 group-hover:opacity-100 transition [.active_&]:opacity-100"></i></button>
      </div>

      <div class="grid grid-rows-2 lg:block relative transition-in transition-fade z-10">
        <TagFilters label="Projects" tags={projectCategories} />
      </div>

      <div class="absolute" data-filter-message="no-items" style="opacity: 0; visibility: hidden;">No projects found</div>

      <div data-filter="container" class="min-h-[50vh] grid md:grid-cols-2 gap-y-12 md:gap-x-36 flex-row work-columns filter-container transition-in transition-fade">
        {publishedProjectEntries.map((project) =>
          <div data-filter="item" data-filter-state="exclude" data-filter-tags={project.data.tags.map(tag => convertToClass(tag))} class:list={['workTile [&.hide]:hidden', project.data.tags.map(tag => convertToClass(tag, 'tag'))]} style="display: none;">
            <WorkExcerpt slug={('/work/'+project.slug).replace('//', '/')} title={project.data.title} img={project.data.image.src} tags={project.data.tags} desc={project.data.excerpt} />
          </div>
        )}
        <!-- <div data-mix="include" class=""></div>
        <div data-mix="exclude" class="contents"></div> -->
      </div>

    </div>
  </WrapperDiagonal>
</Layout>